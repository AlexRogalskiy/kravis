buildscript {
    ext.kotlin_version = '1.2.70'
    ext.dokka_version = '0.9.17'

    repositories {
        maven { url 'https://dl.bintray.com/kotlin/dokka' }
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}



plugins { id "com.jfrog.bintray" version "1.2" }

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'maven-publish'

// not neeeded but does not work without
mainClassName = "foo.Bar" // not needed but does not work without


repositories {
    mavenCentral()

    jcenter()

    //    mavenLocal() //todo disable for release
    //    maven { url 'https://jitpack.io' }
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"

    // tagged version for release
    compile "de.mpicbg.scicomp:krangl:0.10.2"
    // local snapshot build
//    compile "de.mpicbg.scicomp:krangl:0.11-SNAPSHOT"
    // when using jitpack
//    compile 'com.github.holgerbrandl:krangl:master-SNAPSHOT'


    compile group: 'no.tornado', name: 'tornadofx', version: '1.7.17'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    compile 'org.rosuda.REngine:REngine:2.1.0'
    compile 'org.rosuda.REngine:Rserve:1.8.1'

    // see https://github.com/codecentric/javafxsvg
//    compile 'de.codecentric.centerdevice:javafxsvg:1.3.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
//    testCompile "io.kotlintest:kotlintest-runner-junit5:3.1.9"
    testCompile 'io.kotlintest:kotlintest-assertions:3.1.6'


    // needed to work around https://youtrack.jetbrains.com/issue/KT-15064
    compileOnly "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"
//    testCompile "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"

    // testCompile group: 'com.github.javafaker', name: 'javafaker', version: '0.16'
}


// disabled because would require to inherit StringSpec in all test classes
//test {
//    useJUnitPlatform()
//}


//Minimal dokka configuration:
dokka {
    outputFormat = 'html'
//    outputDirectory = "$buildDir/javadoc"
    outputDirectory = "$projectDir/docs/javadoc"

//    sourceDirs = files('src/test/kotlin')
    samples = ['src/test/kotlin/kravis/samples/']

    // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
    reportUndocumented = false

//    http://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation
    includes = ['docs/packages_info.md']
}

//task javadoc(type: Javadoc) {
javadoc {
    exclude '**/PlotResultPanel.java'
}

// http://stackoverflow.com/questions/11474729/how-to-build-sources-jar-with-gradle
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

// see https://github.com/Kotlin/dokka/issues/42
task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir

    reportUndocumented = false
    samples = ['src/test/kotlin/kravis/samples']
    
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

group 'com.github.holgerbrandl'
//version '0.4-SNAPSHOT'
version '0.4'



artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar { classifier "sources" }
            artifact javadocJar
        }
    }
}

if (hasProperty('bintray_user') && hasProperty('bintray_key')) {
    bintray {

        // property must be set in ~/.gradle/gradle.properties
        user = bintray_user
        key = bintray_key

        publications = ['maven'] //When uploading configuration files

        dryRun = false //Whether to run this as dry-run, without deploying
        publish = true // If version should be auto published after an upload

        pkg {
            repo = 'github'
            name = 'kravis'
            vcsUrl = 'https://github.com/holgerbrandl/kravis'

            licenses = ['MIT']
            publicDownloadNumbers = true

            //Optional version descriptor
            version {
                name = project.version //Bintray logical version name
                desc = '.'
                released = new Date()
                vcsTag = 'v' + project.version
            }
        }
    }
}
