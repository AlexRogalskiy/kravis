buildscript {
    ext.kotlin_version = '1.4.30' // see https://github.com/Kotlin/dokka/issues/656
    ext.dokka_version = '0.10.0' // see https://github.com/Kotlin/dokka/issues/656


    repositories {
//        maven { url 'https://dl.bintray.com/kotlin/dokka' }
        mavenCentral()
    }

    dependencies {
//        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.22.0'
    }
}


apply plugin: 'kotlin'
//apply plugin: 'org.jetbrains.dokka'
apply plugin: 'application'
apply plugin: 'java'
//apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'io.codearte.nexus-staging'

// not neeeded but does not work without
mainClassName = "foo.Bar" // not needed but does not work without


repositories {
    mavenCentral()

//        mavenLocal() //todo disable for release
    //    maven { url 'https://jitpack.io' }
}


dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect"

    // tagged version for release
    compile "com.github.holgerbrandl.krangl:krangl:0.15.6"
    // local snapshot build
//    compile "de.mpicbg.scicomp:krangl:0.11-SNAPSHOT"
    // when using jitpack
//    compile 'com.github.holgerbrandl:krangl:master-SNAPSHOT'
    implementation "ml.dmlc:xgboost4j:0.80"

    implementation group: 'no.tornado', name: 'tornadofx', version: '1.7.20'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    implementation 'org.rosuda.REngine:REngine:2.1.0'
    implementation 'org.rosuda.REngine:Rserve:1.8.1'

    // see https://github.com/codecentric/javafxsvg
//    compile 'de.codecentric.centerdevice:javafxsvg:1.3.0'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
//    testCompile "io.kotlintest:kotlintest-runner-junit5:3.1.9"
    testImplementation 'io.kotest:kotest-assertions-core:4.2.6'


    // needed to work around https://youtrack.jetbrains.com/issue/KT-15064
//    compileOnly "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-script-runtime:1.4.21"
//    testCompile "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"

    // testCompile group: 'com.github.javafaker', name: 'javafaker', version: '0.16'
}


// disabled because would require to inherit StringSpec in all test classes
//test {
//    useJUnitPlatform()
//}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}



//Minimal dokka configuration:
//dokka {
//    outputFormat = 'html'
////    outputDirectory = "$buildDir/javadoc"
//    outputDirectory = "$projectDir/docs/javadoc"
//
//
//    configuration {
////    sourceDirs = files('src/test/kotlin')
//        samples = ['src/test/kotlin/kravis/samples/']
//
//        // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
//        reportUndocumented = false
//
////    http://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation
//        includes = ['docs/packages_info.md']
//    }
//}

//task javadoc(type: Javadoc) {
javadoc {
    exclude '**/PlotResultPanel.java'
}

// http://stackoverflow.com/questions/11474729/how-to-build-sources-jar-with-gradle
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

// see https://github.com/Kotlin/dokka/issues/42
//task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
//    outputFormat = 'javadoc'
//    outputDirectory = javadoc.destinationDir
//
//    configuration {
//        reportUndocumented = false
//        samples = ['src/test/kotlin/kravis/samples']
//    }
//    inputs.dir 'src/main/kotlin'
//}

//task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

group 'com.github.holgerbrandl'
//version '0.8-SNAPSHOT'
version '0.7.4'


//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            from components.java
//            artifact sourcesJar { classifier "sources" }
//            artifact javadocJar
//        }
//    }
//}

apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"